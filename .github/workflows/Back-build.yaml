name: Build, Save to S3, and Deploy to EC2

on:
  push:
    branches:
      - main  # 원하는 브랜치로 변경

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t my-app:latest .

      - name: Save Docker Image to Tar
        run: docker save -o my-app.tar my-app:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      - name: Upload Docker Image to S3
        env:
            BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        run: |
          aws s3 sync ./ s3://trendy-healthy-backend.store/ --exclude "*" --include "my-app.tar"

      - name: Deploy Docker Image to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          # SSH into EC2 instance and deploy the Docker image
          ssh -i <(echo "$SSH_PRIVATE_KEY") $EC2_USER@$EC2_HOST << 'EOF'
            # Update and install Docker if needed
            sudo apt-get update
            sudo apt-get install -y docker.io

            # Download the Docker image tar file from S3
            aws s3 sync s3://trendy-healthy-backend.store/ ./ --exclude "*" --include "my-app.tar"

            # Load the Docker image
            docker load -i my-app.tar

            # Remove any previous containers (optional)
            docker rm -f my-app-container || true

            # Run the Docker container
            docker run -d --name my-app-container -p 8081:8080 my-app:latest
          EOF

      - name: Cleanup
        run: rm my-app.tar
