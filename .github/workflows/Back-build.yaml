name: Build, Push to ECR, and Deploy to EC2

on:
  push:
    branches:
      - main  # 원하는 브랜치로 변경

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t my-app:latest .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to ECR
        run: |
          $(aws ecr get-login --no-include-email --region ap-northeast-2)

      - name: Tag Docker Image
        run: docker tag my-app:latest 211125776553.dkr.ecr.ap-northeast-2.amazonaws.com/trendy-backend:latest

      - name: Push Docker Image to ECR
        run: docker push 211125776553.dkr.ecr.ap-northeast-2.amazonaws.com/trendy-backend:latest

      - name: Deploy Docker Image to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          # Write the SSH private key to a file
          echo "$SSH_PRIVATE_KEY" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

          # Retry logic for SSH
          for i in {1..5}; do
            ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -i /tmp/id_rsa $EC2_USER@$EC2_HOST <<EOF
              # Update and install Docker if needed
              sudo apt-get update
              sudo apt-get install -y docker.io

              # Login to ECR
              $(aws ecr get-login --no-include-email --region ap-northeast-2)

              # Pull the Docker image
              docker pull 211125776553.dkr.ecr.ap-northeast-2.amazonaws.com/trendy-backend:latest

              # Remove any previous containers (optional)
              docker rm -f my-app-container || true

              # Run the Docker container
              docker run -d --name my-app-container -p 8081:8080 211125776553.dkr.ecr.ap-northeast-2.amazonaws.com/trendy-backend:latest
            EOF
            if [ $? -eq 0 ]; then break; fi
            echo "SSH command failed, retrying in 10 seconds..."
            sleep 10
          done

      - name: Cleanup
        run: rm /tmp/id_rsa
